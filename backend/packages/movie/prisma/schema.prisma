generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMINISTRATOR
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String
  name      String
  role      UserRole @default(USER)
  birthDate DateTime
  reviewer  Boolean? @default(false)
  password  String
  Ticket    Ticket[]
}

model Movie {
  id             String          @id @default(uuid())
  name           String
  description    String
  classification Classification? @default(GENERAL_AUDIENCE)
  duration       Int
  Session        Session[]
}

model SessionSeats {
  id        String   @id @default(uuid())
  line      String
  column    Int
  type      SeatType @default(STANDARD)
  state     Boolean  @default(false)
  disable   Boolean  @default(false)
  Session   Session? @relation(fields: [sessionId], references: [id])
  sessionId String?
}

enum SeatType {
  STANDARD
  WHEELCHAIR
  DOUBLESEAT
}

model Session {
  id           String         @id @default(uuid())
  price        Float
  sessionDate  DateTime       @default(now())
  room         SessionRoom    @default(COMMON)
  SessionSeats SessionSeats[]
  movieId      String
  movie        Movie          @relation(fields: [movieId], references: [id])
  Ticket       Ticket[]
}

enum SessionRoom {
  COMMON
  IMAX
  DLUX
  XD
}

enum Classification {
  GENERAL_AUDIENCE
  PARENT_GUIDANCE_SUGGESTED
  RESTRICTED
}

enum TicketCategory {
  FREE
  PROMO
  STANDARD
  HALF_PRICE
}

model Ticket {
  id            String         @id @default(uuid())
  category      TicketCategory @default(STANDARD)
  paymentStatus Boolean        @default(false)
  session       Session        @relation(fields: [sessionId], references: [id])
  sessionId     String

  user   User   @relation(fields: [userId], references: [id])
  userId String


}
